{"version":3,"file":"static/js/763.64485b73.chunk.js","mappings":"2QAGaA,EAAUC,EAAAA,GAAAA,IAAH,sJAQPC,EAAQD,EAAAA,GAAAA,MAAH,4HAOLE,GAAOF,EAAAA,EAAAA,IAAOG,EAAAA,IAAPH,CAAH,+GAQJI,EAASJ,EAAAA,GAAAA,OAAH,uT,SCvBNK,EAAY,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,QAC3C,OACE,UAACT,EAAD,YACE,SAACE,EAAD,CACEQ,KAAK,OACLC,YAAY,mBACZJ,MAAOA,EACPC,SAAU,SAAAI,GACRJ,EAASI,EAAEC,OAAON,MACnB,KAEH,SAACF,EAAD,CAAQK,KAAK,SAASD,QAASA,EAA/B,UACE,SAACN,EAAD,QAIP,EChBYW,EAAYb,EAAAA,GAAAA,GAAH,oDAITc,EAAcd,EAAAA,GAAAA,GAAH,yCAGXe,GAAYf,EAAAA,EAAAA,IAAOgB,EAAAA,GAAPhB,CAAH,4CAGTiB,EAAYjB,EAAAA,GAAAA,GAAH,kFCJTkB,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACrBC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAACR,EAAD,UACGM,EAAOG,KAAI,SAAAC,GAAK,OACf,SAACT,EAAD,WACE,SAACC,EAAD,CAAWS,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMP,GAArD,UACE,UAACH,EAAD,WACGM,EAAMK,MADT,OACoBL,EAAMM,aAD1B,UAFcN,EAAME,GADT,KAWtB,E,gDCvBD,aAAe,OAAf,oBAAe,gGAAkCK,EAAlC,EAAkCA,MAAOC,EAAzC,EAAyCA,KAAzC,kBAEYC,IAAAA,IAAA,kHACsFF,EADtF,iBACoGC,EADpG,wBAFZ,cAELE,EAFK,yBAKJA,GALI,gCAOXC,QAAQC,MAAR,MAPW,gFCIf,IAoDA,EApDe,WAAO,IAAD,EACnB,GAAoCC,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KAEA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAU,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,GAEhD,GAAwCP,EAAAA,EAAAA,UAAS,IAAjD,eAAOQ,EAAP,KAAqBC,EAArB,KAyBA,OATAC,EAAAA,EAAAA,YAAU,WACW,KAAfJ,GD3BO,SAAf,kCC4BMK,CAAiB,CAAEjB,MAAOY,EAAYX,KAAM,IAAKiB,MAAK,SAAAC,GACpDJ,EAAgBI,EAASC,KAAKC,QAC/B,IAEHN,EAAgB,GACjB,GAAE,CAACH,KAGF,6BACE,SAACrC,EAAD,CACEC,MAAO+B,EACP9B,SAAU+B,EACV9B,QAvBqB,WALD,IAAAsB,EAML,KAAfO,GAJJI,EAD6B,MADLX,EAUNO,GATgB,CAAEP,MAAAA,GAAU,CAAC,GAU/CQ,EAAc,KAJZc,MAAM,mBAKT,KAmBG,UAAC,EAAAC,SAAD,CAAUC,UAAU,wCAApB,UACoB,KAAjBV,GACC,SAAC1B,EAAD,CAAYC,OAAQyB,KAEpB,iEAGF,SAAC,KAAD,SAIP,C","sources":["components/SearchBox/SearchBox.styled.js","components/SearchBox/SearchBox.jsx","components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","services/searchQueryMovie.js","pages/Movies/Movies.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { FcSearch } from 'react-icons/fc';\n\nexport const Wrapper = styled.div`\n  display: inline-flex;\n  align-items: center;\n  position: relative;\n  margin-bottom: 16px;\n  text-transform: uppercase;\n`;\n\nexport const Input = styled.input`\n  padding: 8px 32px 8px 8px;\n  border-radius: 10px;\n  font: inherit;\n  border: 1px gray dotted;\n`;\n\nexport const Icon = styled(FcSearch)`\n  width: 20px;\n  height: 20px;\n  position: absolute;\n  right: 4px;\n  bottom: 2px;\n`;\n\nexport const Button = styled.button`\n  width: 30px;\n  height: 25px;\n\n  border: transparent;\n  border-left: 1px solid grey;\n  border-radius: 5px;\n  background-color: transparent;\n  position: absolute;\n  right: 4px;\n\n  &:hover {\n    cursor: pointer;\n  }\n  &:active {\n    border-right: 1px solid lightgrey;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { Wrapper, Input, Icon, Button } from './SearchBox.styled';\n\nexport const SearchBox = ({ value, onChange, onClick }) => {\n  return (\n    <Wrapper>\n      <Input\n        type=\"text\"\n        placeholder=\"Enter movie name\"\n        value={value}\n        onChange={e => {\n          onChange(e.target.value);\n        }}\n      />\n      <Button type=\"button\" onClick={onClick}>\n        <Icon />\n      </Button>\n    </Wrapper>\n  );\n};\n\nSearchBox.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n  onClick: PropTypes.func,\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Container = styled.ul`\n  list-style-type: square;\n`;\n\nexport const CardWrapper = styled.li`\n  color: black;\n`;\nexport const MovieLink = styled(Link)`\n  color: darkblue;\n`;\nexport const MovieName = styled.h3`\n  padding: 5px;\n  margin-top: 0px;\n  margin-bottom: 0;\n`;\n","import { useLocation } from 'react-router-dom';\nimport {\n  Container,\n  CardWrapper,\n  MovieName,\n  MovieLink,\n} from './MoviesList.styled';\nimport PropTypes from 'prop-types';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <Container>\n      {movies.map(movie => (\n        <CardWrapper key={movie.id}>\n          <MovieLink to={`/movies/${movie.id}`} state={{ from: location }}>\n            <MovieName>\n              {movie.title} - ({movie.release_date})\n            </MovieName>\n          </MovieLink>\n        </CardWrapper>\n      ))}\n    </Container>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      title: PropTypes.string,\n      release_date: PropTypes.string,\n    })\n  ),\n};\n","import axios from 'axios';\n\nexport default async function searchQueryMovie({ query, page }) {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/search/movie?api_key=c0978ead9c0d89a450cd9d2213b423d3&language=en-US&query=${query}&page=${page}&include_adult=true`\n    );\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n}\n","import { useState, useEffect, Suspense } from 'react';\nimport { useSearchParams, Outlet } from 'react-router-dom';\nimport { SearchBox } from 'components/SearchBox/SearchBox';\nimport { MoviesList } from '../../components/MoviesList/MoviesList';\nimport searchQueryMovie from '../../services/searchQueryMovie';\n\nconst Movies = () => {\n  const [inputValue, setInputValue] = useState('');\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const movieQuery = searchParams.get('query') ?? '';\n\n  const [searchResult, setSearchResult] = useState('');\n\n  const updateQueryString = query => {\n    const nextParams = query !== '' ? { query } : {};\n    setSearchParams(nextParams);\n  };\n\n  const searchMovieOnClick = () => {\n    if (inputValue === '') {\n      alert('Enter movie name');\n      return;\n    }\n    updateQueryString(inputValue);\n    setInputValue('');\n  };\n\n  useEffect(() => {\n    if (movieQuery !== '') {\n      searchQueryMovie({ query: movieQuery, page: 1 }).then(dbMovies => {\n        setSearchResult(dbMovies.data.results);\n      });\n    }\n    setSearchResult('');\n  }, [movieQuery]);\n\n  return (\n    <main>\n      <SearchBox\n        value={inputValue}\n        onChange={setInputValue}\n        onClick={searchMovieOnClick}\n      />\n\n      <Suspense fallback={<div>Loading...</div>}>\n        {searchResult !== '' ? (\n          <MoviesList movies={searchResult} />\n        ) : (\n          <div>No movies... Try to find something</div>\n        )}\n\n        <Outlet />\n      </Suspense>\n    </main>\n  );\n};\n\nexport default Movies;\n"],"names":["Wrapper","styled","Input","Icon","FcSearch","Button","SearchBox","value","onChange","onClick","type","placeholder","e","target","Container","CardWrapper","MovieLink","Link","MovieName","MoviesList","movies","location","useLocation","map","movie","to","id","state","from","title","release_date","query","page","axios","response","console","error","useState","inputValue","setInputValue","useSearchParams","searchParams","setSearchParams","movieQuery","get","searchResult","setSearchResult","useEffect","searchQueryMovie","then","dbMovies","data","results","alert","Suspense","fallback"],"sourceRoot":""}