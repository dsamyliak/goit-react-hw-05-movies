{"version":3,"file":"static/js/141.c96b49e2.chunk.js","mappings":"mQAGaA,EAAUC,EAAAA,GAAAA,IAAH,sJAQPC,EAAQD,EAAAA,GAAAA,MAAH,4HAOLE,GAAOF,EAAAA,EAAAA,IAAOG,EAAAA,IAAPH,CAAH,+GAQJI,EAASJ,EAAAA,GAAAA,OAAH,4V,SCtBNK,EAAY,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAUjC,OACE,UAACR,EAAD,YACE,SAACE,EAAD,CACEO,KAAK,OACLF,MAAOA,EACPC,SAAU,SAAAE,GACRF,EAASE,EAAEC,OAAOJ,MACnB,KAEH,SAACF,EAAD,CACEI,KAAK,SADP,UAYE,SAACN,EAAD,QAIP,ECTD,EAxBe,WAAO,IAAD,EACnB,GAAwCS,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAU,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,GAWhD,OACE,6BACE,SAACV,EAAD,CAAWC,MAAOQ,EAAYP,SAPR,SAAAS,GAExBH,EAD6B,KAAVG,EAAe,CAAEA,MAAAA,GAAU,CAAC,EAEhD,KAMG,SAAC,EAAAC,SAAD,CAAUC,UAAU,wCAApB,UACE,SAAC,KAAD,QAIP,C","sources":["components/SearchBox/SearchBox.styled.js","components/SearchBox/SearchBox.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { FcSearch } from 'react-icons/fc';\n\nexport const Wrapper = styled.div`\n  display: inline-flex;\n  align-items: center;\n  position: relative;\n  margin-bottom: 16px;\n  text-transform: uppercase;\n`;\n\nexport const Input = styled.input`\n  padding: 8px 32px 8px 8px;\n  border-radius: 10px;\n  font: inherit;\n  border: 1px gray dotted;\n`;\n\nexport const Icon = styled(FcSearch)`\n  width: 20px;\n  height: 20px;\n  position: absolute;\n  right: 4px;\n  bottom: 2px;\n`;\n\nexport const Button = styled.button`\n  width: 30px;\n  height: 25px;\n\n  border: transparent;\n  border-left: 1px solid grey;\n  border-radius: 5px;\n  background-color: transparent;\n  position: absolute;\n  right: 4px;\n\n  &:hover {\n    // background-color: lightgrey;\n    cursor: pointer;\n  }\n  &:active {\n    border-right: 1px solid lightgrey;\n  }\n`;\n","import { Wrapper, Input, Icon, Button } from './SearchBox.styled';\n// import searchQueryMovie from '../../services/searchQueryMovie';\n// import { useState } from 'react';\n\nexport const SearchBox = ({ value, onChange }) => {\n  // const [page, setPage] = useState(1);\n  // const [searchMovieData, setSearchMovieData] = useState({});\n  // const searchMovie = () =>\n  //   searchQueryMovie({ query: value, page }).then(response => {\n  //     console.log('response.data', response.data);\n  //     setSearchMovieData(response.data);\n  //     return response;\n  //   });\n\n  return (\n    <Wrapper>\n      <Input\n        type=\"text\"\n        value={value}\n        onChange={e => {\n          onChange(e.target.value);\n        }}\n      />\n      <Button\n        type=\"button\"\n        // onClick={() => {\n        //   if (value !== '') {\n        //     setPage(page + 1);\n        //     console.log('page', page);\n        //     searchMovie();\n        //     return;\n        //   }\n        //   alert('Enter movie name!');\n        // }}\n      >\n        <Icon />\n      </Button>\n    </Wrapper>\n  );\n};\n","// import searchQueryMovie from '../../services/searchQueryMovie';\nimport { useSearchParams, Outlet } from 'react-router-dom';\nimport { Suspense } from 'react';\nimport { SearchBox } from 'components/SearchBox/SearchBox';\n// import { MoviesList } from '../../components/MoviesList/MoviesList';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const movieQuery = searchParams.get('query') ?? '';\n\n  // const visibleProducts = products.filter(product =>\n  //   product.name.toLowerCase().includes(productName.toLowerCase())\n  // );\n\n  const updateQueryString = query => {\n    const nextParams = query !== '' ? { query } : {};\n    setSearchParams(nextParams);\n  };\n\n  return (\n    <main>\n      <SearchBox value={movieQuery} onChange={updateQueryString} />\n      {/* <MoviesList movies={visibleProducts} /> */}\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </main>\n  );\n};\n\nexport default Movies;\n"],"names":["Wrapper","styled","Input","Icon","FcSearch","Button","SearchBox","value","onChange","type","e","target","useSearchParams","searchParams","setSearchParams","movieQuery","get","query","Suspense","fallback"],"sourceRoot":""}