{"version":3,"file":"static/js/622.e5bf77be.chunk.js","mappings":"yPAEaA,EAAYC,EAAAA,GAAAA,IAAH,iEAKTC,EAAcD,EAAAA,GAAAA,IAAH,yGAQXE,EAAaF,EAAAA,GAAAA,IAAH,gEAIVG,EAAUH,EAAAA,GAAAA,GAAH,mE,SCXPI,EAAY,SAAC,GAAsD,IAApDC,EAAmD,EAAnDA,UAAWC,EAAwC,EAAxCA,SAAUC,EAA8B,EAA9BA,WAAYC,EAAkB,EAAlBA,YAC3D,OACE,UAACT,EAAD,YACE,SAACG,EAAD,CAAYO,IAAKH,EAAUI,IAAG,UAAKL,EAAUM,UAC7C,UAACV,EAAD,YACE,SAACE,EAAD,oBAAaE,EAAUO,eAAvB,aAA0CJ,EAA1C,QACA,8CAA6C,GAAzBH,EAAUQ,cAAmBC,QAAQ,GAAzD,QACA,sCACA,iCAAOT,EAAUU,aACjB,oCACA,uBAAIR,SAIX,E,gDCpBD,aAAe,OAAf,oBAAe,WAA4BS,GAA5B,gGAEYC,IAAAA,IAAA,6CACiBD,EADjB,6DAFZ,cAELE,EAFK,yBAKJA,GALI,gCAOXC,QAAQC,MAAR,MAPW,gFCGf,IAAMC,GAAWC,EAAAA,EAAAA,OAAK,kBAAM,qDAAN,IA8DtB,EA5DqB,WAAO,IAAD,QACjBN,GAAYO,EAAAA,EAAAA,MAAZP,QACFQ,GAAWC,EAAAA,EAAAA,MACXC,EAAY,oBAAGF,EAASG,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAE7C,GAAkCC,EAAAA,EAAAA,UAAS,CAAC,GAA5C,eAAOxB,EAAP,KAAkByB,EAAlB,KACA,GAAgCD,EAAAA,EAAAA,UAAS,IAAzC,eAAOvB,EAAP,KAAiByB,EAAjB,KACA,GAAoCF,EAAAA,EAAAA,UAAS,IAA7C,eAAOtB,EAAP,KAAmByB,EAAnB,KACA,GAAsCH,EAAAA,EAAAA,UAAS,IAA/C,eAAOrB,EAAP,KAAoByB,EAApB,KAkBA,OAhBAC,EAAAA,EAAAA,YAAU,YDfG,SAAf,mCCgBIC,CAAanB,GAASoB,MAAK,SAAAC,GACzBP,EAAaO,EAAUC,MACvBP,EAAY,kCAAD,OACyBM,EAAUC,KAAKC,cAEnDP,EACEK,EAAUC,KAAKE,OACZC,KAAI,SAAAC,GAAK,OAAInC,EAAU,WAAOmC,EAAMC,KAAb,IAAd,IACTC,KAAK,MAEVX,EAAeI,EAAUC,KAAKO,aAAaC,MAAM,EAAG,GACrD,GAEF,GAAE,CAAC9B,KAGF,6BACE,SAACK,EAAD,CAAU0B,GAAIrB,EAAd,sBAEA,SAACtB,EAAD,CACEC,UAAWA,EACXC,SAAUA,EACVC,WAAYA,EACZC,YAAaA,KAEf,UAAC,EAAAwC,SAAD,CAAUC,UAAU,wCAApB,WACE,6CACA,2BACE,yBACE,SAAC,KAAD,CACEF,GAAG,OACHG,YAAa1C,EACbmB,MAAO,CAAEC,KAAI,UAAEJ,EAASG,aAAX,aAAE,EAAgBC,MAHjC,qBAQF,yBACE,SAAC,KAAD,CAAMmB,GAAG,UAAUpB,MAAO,CAAEC,KAAI,UAAEJ,EAASG,aAAX,aAAE,EAAgBC,MAAlD,2BAKJ,SAAC,KAAD,SAIP,C","sources":["components/MovieDetails/MovieInfo.styled.js","components/MovieDetails/MovieInfo.jsx","services/getMovieById.js","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: inline-flex;\n  width: auto;\n`;\n\nexport const CardWrapper = styled.div`\n  display: block;\n  padding: 30px;\n\n  > a {\n    text-decoration: none;\n  }\n`;\nexport const ImageBlock = styled.img`\n  display: inline-flex;\n  width: 30%;\n`;\nexport const Header1 = styled.h1`\n  padding: 0;\n  margin: 0;\n  border: 0;\n`;\n","import {\n  Container,\n  CardWrapper,\n  ImageBlock,\n  Header1,\n} from './MovieInfo.styled';\nimport PropTypes from 'prop-types';\n\nexport const MovieInfo = ({ dataMovie, imageSrc, dataGenres, dataRelease }) => {\n  return (\n    <Container>\n      <ImageBlock src={imageSrc} alt={`${dataMovie.title}`} />\n      <CardWrapper>\n        <Header1>{`${dataMovie.original_title} (${dataRelease})`}</Header1>\n        <p>{`User score: ${(dataMovie.vote_average * 10).toFixed(2)}%`}</p>\n        <h3>Overview</h3>\n        <p>{`${dataMovie.overview}`}</p>\n        <h4>Genres</h4>\n        <p>{dataGenres}</p>\n      </CardWrapper>\n    </Container>\n  );\n};\n\nMovieInfo.propTypes = {\n  dataMovie: PropTypes.object,\n  imageSrc: PropTypes.string,\n  dataGenres: PropTypes.string,\n  dataRelease: PropTypes.string,\n};\n","import axios from 'axios';\n\nexport default async function getMovieById(movieId) {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}?api_key=c0978ead9c0d89a450cd9d2213b423d3&language=en-US`\n    );\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n}\n","import { lazy, Suspense, useState, useEffect } from 'react';\nimport { useParams, useLocation, Outlet, Link } from 'react-router-dom';\nimport { MovieInfo } from 'components/MovieDetails/MovieInfo';\nimport getMovieById from '../../services/getMovieById';\n\nconst BackLink = lazy(() => import('../../components/BackLink/BackLink'));\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const location = useLocation();\n  const BackLinkHref = location.state?.from ?? '/';\n\n  const [dataMovie, setDataMovie] = useState({});\n  const [imageSrc, setImageSrc] = useState('');\n  const [dataGenres, setDataGenres] = useState('');\n  const [dataRelease, setDataRelease] = useState('');\n\n  useEffect(() => {\n    getMovieById(movieId).then(movieData => {\n      setDataMovie(movieData.data);\n      setImageSrc(\n        `https://image.tmdb.org/t/p/w500${movieData.data.poster_path}`\n      );\n      setDataGenres(\n        movieData.data.genres\n          .map(genre => dataGenres + ` ${genre.name} `)\n          .join('|')\n      );\n      setDataRelease(movieData.data.release_date.slice(0, 7));\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [movieId]);\n\n  return (\n    <main>\n      <BackLink to={BackLinkHref}>Go back</BackLink>\n\n      <MovieInfo\n        dataMovie={dataMovie}\n        imageSrc={imageSrc}\n        dataGenres={dataGenres}\n        dataRelease={dataRelease}\n      />\n      <Suspense fallback={<div>Loading...</div>}>\n        <p>Additional info:</p>\n        <ul>\n          <li>\n            <Link\n              to=\"cast\"\n              datarelease={dataRelease}\n              state={{ from: location.state?.from }}\n            >\n              Cast\n            </Link>\n          </li>\n          <li>\n            <Link to=\"reviews\" state={{ from: location.state?.from }}>\n              Reviews\n            </Link>\n          </li>\n        </ul>\n        <Outlet />\n      </Suspense>\n    </main>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["Container","styled","CardWrapper","ImageBlock","Header1","MovieInfo","dataMovie","imageSrc","dataGenres","dataRelease","src","alt","title","original_title","vote_average","toFixed","overview","movieId","axios","response","console","error","BackLink","lazy","useParams","location","useLocation","BackLinkHref","state","from","useState","setDataMovie","setImageSrc","setDataGenres","setDataRelease","useEffect","getMovieById","then","movieData","data","poster_path","genres","map","genre","name","join","release_date","slice","to","Suspense","fallback","datarelease"],"sourceRoot":""}